package com.example.timeaboutproject.utils;

import com.example.timeaboutproject.R;

import android.app.Activity;
import android.content.Context;
import android.os.Build;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

/**
 * 自定义的一个Toast控件
 * 
 * @author 尹治权
 * 
 */
public class ToastUtil {
	public Toast getToast(Context context, String msg) {
		Toast toast = new Toast(context);
		View toastView = LayoutInflater.from(context).inflate(
				R.layout.view_tips, null);
		((TextView) toastView.findViewById(R.id.tips_msg)).setText(msg);
		toast.setView(toastView);
		toast.setGravity(Gravity.NO_GRAVITY, 0, 300);
		toast.show();
		return toast;
	}

	/**
	 * 设置状态栏颜色
	 * 
	 * @param activity
	 *            需要设置的activity
	 * @param color
	 *            状态栏颜色值
	 */
	public static void setColor(Activity activity, int color) {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
			// 设置状态栏透明
			activity.getWindow().addFlags(
					WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
			// 生成一个状态栏大小的矩形
			View statusView = createStatusView(activity, color);
			// 添加 statusView 到布局中
			ViewGroup decorView = (ViewGroup) activity.getWindow()
					.getDecorView();
			decorView.addView(statusView);
			// 设置根布局的参数
			ViewGroup rootView = (ViewGroup) ((ViewGroup) activity
					.findViewById(android.R.id.content)).getChildAt(0);
			rootView.setFitsSystemWindows(true);
			rootView.setClipToPadding(true);
		}
	}

	/**
	 * 生成一个和状态栏大小相同的矩形条
	 * 
	 * @param activity
	 *            需要设置的activity
	 * @param color
	 *            状态栏颜色值
	 * @return 状态栏矩形条
	 */
	private static View createStatusView(Activity activity, int color) {
		// 获得状态栏高度
		int resourceId = activity.getResources().getIdentifier(
				"status_bar_height", "dimen", "android");
		int statusBarHeight = activity.getResources().getDimensionPixelSize(
				resourceId);

		// 绘制一个和状态栏一样高的矩形
		View statusView = new View(activity);
		LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
				ViewGroup.LayoutParams.MATCH_PARENT, statusBarHeight);
		statusView.setLayoutParams(params);
		statusView.setBackgroundColor(color);
		return statusView;
	}

	/**
	 * * 使状态栏透明 *
	 * <p>
	 * * 适用于图片作为背景的界面,此时需要图片填充到状态栏 * * @param activity 需要设置的activity
	 */
	public static void setTranslucent(Activity activity) {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
			// 设置状态栏透明
			activity.getWindow().addFlags(
					WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
			// 设置根布局的参数
			ViewGroup rootView = (ViewGroup) ((ViewGroup) activity
					.findViewById(android.R.id.content)).getChildAt(0);
			rootView.setFitsSystemWindows(true);
			rootView.setClipToPadding(true);
		}
	}
}
